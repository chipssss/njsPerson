<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.agriculture.mapper.InputUserMapper">
  <resultMap id="BaseResultMap" type="com.njs.agriculture.pojo.InputUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="category_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="quantity" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="specification" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="production_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="shelf_life" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="manufacturer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="source" javaType="java.lang.Integer" jdbcType="TINYINT" />
      <arg column="source_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, category_id, name, quantity, specification, price, production_time, shelf_life, 
    manufacturer, remark, create_time, user_id, source, source_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from input_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from input_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.agriculture.pojo.InputUser" useGeneratedKeys="true" keyProperty="id" >
    insert into input_user (id, category_id, name, 
      quantity, specification, price, 
      production_time, shelf_life, manufacturer, 
      remark, create_time, user_id, 
      source, source_id)
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=REAL}, #{specification,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{productionTime,jdbcType=DATE}, #{shelfLife,jdbcType=INTEGER}, #{manufacturer,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{source,jdbcType=TINYINT}, #{sourceId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njs.agriculture.pojo.InputUser">
    insert into input_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="productionTime != null">
        production_time,
      </if>
      <if test="shelfLife != null">
        shelf_life,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=REAL},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="productionTime != null">
        #{productionTime,jdbcType=DATE},
      </if>
      <if test="shelfLife != null">
        #{shelfLife,jdbcType=INTEGER},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.agriculture.pojo.InputUser">
    update input_user
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=REAL},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="productionTime != null">
        production_time = #{productionTime,jdbcType=DATE},
      </if>
      <if test="shelfLife != null">
        shelf_life = #{shelfLife,jdbcType=INTEGER},
      </if>
      <if test="manufacturer != null">
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.agriculture.pojo.InputUser">
    update input_user
    set category_id = #{categoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=REAL},
      specification = #{specification,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      production_time = #{productionTime,jdbcType=DATE},
      shelf_life = #{shelfLife,jdbcType=INTEGER},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      source = #{source,jdbcType=TINYINT},
      source_id = #{sourceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from input_user
    where user_id = #{userId}
  </select>
  <select id="selectByCategoryIdList" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List"/>
    from input_user
    where user_id = #{userId}
    and category_id in
    <foreach collection="categoryList" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
  <select id="selectByCategoryId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from input_user
    where user_id = #{userId}
    and category_id = #{categoryId}
  </select>
  <select id="getStockByQuantity" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from input_user
    where user_id = #{userId}
    and quantity &lt; #{quantity}
  </select>
</mapper>