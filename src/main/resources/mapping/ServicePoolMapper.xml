<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.agriculture.mapper.ServicePoolMapper">
  <resultMap id="BaseResultMap" type="com.njs.agriculture.pojo.ServicePool">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="source_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reason" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="service_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reply" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="source" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, source_id, reason, service_id, status, reply, source
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from service_pool
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from service_pool
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.agriculture.pojo.ServicePool" useGeneratedKeys="true" keyProperty="id">
    insert into service_pool (id, source_id, reason, 
      service_id, status, reply, 
      source)
    values (#{id,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 
      #{serviceId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{reply,jdbcType=VARCHAR}, 
      #{source,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njs.agriculture.pojo.ServicePool">
    insert into service_pool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="reply != null">
        reply,
      </if>
      <if test="source != null">
        source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.agriculture.pojo.ServicePool">
    update service_pool
    <set>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="reply != null">
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.agriculture.pojo.ServicePool">
    update service_pool
    set source_id = #{sourceId,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      service_id = #{serviceId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      reply = #{reply,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectServiceIdsByEnterprieIds" parameterType="java.util.List" resultType="int">
    select service_id
    from service_pool
    where source = 1
    and status = 1
    and source_id in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>
  <select id="selectServiceIdsByUserId" parameterType="int" resultType="int">
    select service_id
    from service_pool
    where source = 0
    and status = 1
    and source_id = #{userId}
  </select>
  <select id="selectByUserId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from service_pool
    where source = #{source}
    and source_id = #{sourceId}
  </select>
  <select id="selectByStatus" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from service_pool
    where status = #{status}
  </select>
  <select id="validExist" resultType="int" parameterType="map">
    select count(1)
    from service_pool
    where source_id = #{sourceId}
    and source = #{source}
    and service_id = #{serviceId}
  </select>
</mapper>