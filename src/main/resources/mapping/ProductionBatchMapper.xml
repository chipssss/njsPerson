<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.agriculture.mapper.ProductionBatchMapper">
  <resultMap id="BaseResultMap" type="com.njs.agriculture.pojo.ProductionBatch">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="field_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="plant_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="collect_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="finish" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="generated" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="SimpleBaseResultMap" type="com.njs.agriculture.pojo.ProductionBatch">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="field_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="plant_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="collect_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, field_id, plant_time, collect_time, finish, `generated` , quantity
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from production_batch
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from production_batch
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.agriculture.pojo.ProductionBatch" keyProperty="id" useGeneratedKeys="true">
    insert into production_batch (id, name, field_id, 
      plant_time, collect_time, finish, 
      `generated`, quantity)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{fieldId,jdbcType=INTEGER}, 
      #{plantTime,jdbcType=DATE}, #{collectTime,jdbcType=DATE}, #{finish,jdbcType=INTEGER}, 
      #{generated,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njs.agriculture.pojo.ProductionBatch">
    insert into production_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="fieldId != null">
        field_id,
      </if>
      <if test="plantTime != null">
        plant_time,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
      <if test="finish != null">
        finish,
      </if>
      <if test="generated != null">
        `generated`,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fieldId != null">
        #{fieldId,jdbcType=INTEGER},
      </if>
      <if test="plantTime != null">
        #{plantTime,jdbcType=DATE},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=DATE},
      </if>
      <if test="finish != null">
        #{finish,jdbcType=INTEGER},
      </if>
      <if test="generated != null">
        #{generated,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.agriculture.pojo.ProductionBatch">
    update production_batch
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fieldId != null">
        field_id = #{fieldId,jdbcType=INTEGER},
      </if>
      <if test="plantTime != null">
        plant_time = #{plantTime,jdbcType=DATE},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=DATE},
      </if>
      <if test="finish != null">
        finish = #{finish,jdbcType=INTEGER},
      </if>
      <if test="generated != null">
        `generated` = #{generated,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.agriculture.pojo.ProductionBatch">
    update production_batch
    set name = #{name,jdbcType=VARCHAR},
      field_id = #{fieldId,jdbcType=INTEGER},
      plant_time = #{plantTime,jdbcType=DATE},
      collect_time = #{collectTime,jdbcType=DATE},
      finish = #{finish,jdbcType=INTEGER},
      `generated` = #{generated,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="batchInfoByFinished" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from production_batch
    where field_id = #{fieldId}
    and finished = #{finished}
  </select>
  <select id="batchInfoByGenerated" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from production_batch
    where field_id = #{fieldId}
    and generated = #{generated}
  </select>
  <select id="onlyBatch" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from production_batch
    where field_id = #{fieldId}
    and DATE_FORMAT(plant_time, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{today}, '%Y-%m-%d')
    and DATE_FORMAT(collect_time, '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{today}, '%Y-%m-%d')
  </select>
  <select id="selectFieldIdByUserId" parameterType="int" resultType="int">
    select
    field_id
    from production_batch
    where source = #{source}
    and source_id = #{sourceId}
  </select>
  <select id="selectByExistProcessRecord" parameterType="int" resultMap="BaseResultMap">
      select a.id, a.name, a.crop_info_id,a.field_id,a.collect_time,a.plant_time
from production_batch a
JOIN (select distinct batch_id from process_record where source = 0 and source_id = #{userId}) b
on a.id = b.batch_id;
    </select>
  <select id="selectByFieldId" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from production_batch
    where field_id = #{fieldId}
  </select>
  <select id="selectByFieldList" parameterType="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from production_batch
    where field_id in
    <foreach collection="list" separator="," item="item" index="index" open="(" close=")">
      #{item.id}
    </foreach>
  </select>
  <select id="selectBySource" parameterType="map" resultMap="SimpleBaseResultMap">
    select a.id, a.name, a.field_id, a.plant_time, a.collect_time , a.quantity
    from production_batch a inner join field b
    on a.field_id = b.id
    where b.source = #{source}
    and b.source_id = #{sourceId};
  </select>
</mapper>