<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.agriculture.mapper.FieldMapper">
  <resultMap id="BaseResultMap" type="com.njs.agriculture.pojo.Field">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="square" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="manager" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="TINYINT" />
      <arg column="location" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="qrcode_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="source_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="source" javaType="java.lang.Integer" jdbcType="TINYINT" />
      <arg column="crop_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="crop_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="SimpleMap" type="com.njs.agriculture.VO.FieldListVO">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, square, name, manager, status, location, qrcode_id, remark, source_id, source, 
    crop_id, crop_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from field
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from field
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.agriculture.pojo.Field">
    insert into field (id, square, name, 
      manager, status, location, 
      qrcode_id, remark, source_id, 
      source, crop_id, crop_name
      )
    values (#{id,jdbcType=INTEGER}, #{square,jdbcType=REAL}, #{name,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{location,jdbcType=VARCHAR}, 
      #{qrcodeId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{sourceId,jdbcType=INTEGER}, 
      #{source,jdbcType=TINYINT}, #{cropId,jdbcType=INTEGER}, #{cropName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njs.agriculture.pojo.Field">
    insert into field
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="square != null">
        square,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="qrcodeId != null">
        qrcode_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="cropId != null">
        crop_id,
      </if>
      <if test="cropName != null">
        crop_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="square != null">
        #{square,jdbcType=REAL},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeId != null">
        #{qrcodeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="cropId != null">
        #{cropId,jdbcType=INTEGER},
      </if>
      <if test="cropName != null">
        #{cropName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.agriculture.pojo.Field">
    update field
    <set>
      <if test="square != null">
        square = #{square,jdbcType=REAL},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeId != null">
        qrcode_id = #{qrcodeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="cropId != null">
        crop_id = #{cropId,jdbcType=INTEGER},
      </if>
      <if test="cropName != null">
        crop_name = #{cropName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.agriculture.pojo.Field">
    update field
    set square = #{square,jdbcType=REAL},
      name = #{name,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      location = #{location,jdbcType=VARCHAR},
      qrcode_id = #{qrcodeId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      source_id = #{sourceId,jdbcType=INTEGER},
      source = #{source,jdbcType=TINYINT},
      crop_id = #{cropId,jdbcType=INTEGER},
      crop_name = #{cropName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectBySourceId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from field
    where source_id = #{sourceId}
    and source = #{source}
  </select>
  <select id="selectAllBySourceId" parameterType="map" resultMap="SimpleMap">
    select id,name
    from field
    where source_id = #{sourceId}
    and source = #{source}
  </select>
  <select id="selectExistedByUserId" parameterType="map" resultMap="SimpleMap">
    select distinct a.id,a.name
    from field a INNER JOIN production_batch b
    on a.id = b.field_id
    WHERE a.source = #{source}
    and a.source_id = #{sourceId};
  </select>
</mapper>