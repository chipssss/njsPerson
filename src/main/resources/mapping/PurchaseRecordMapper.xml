<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.agriculture.mapper.PurchaseRecordMapper">
  <resultMap id="BaseResultMap" type="com.njs.agriculture.pojo.PurchaseRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="personnal_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pool_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="buyer_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="enterprise_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="source" javaType="java.lang.Integer" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, personnal_id, pool_id, quantity, buyer_id, enterprise_id, source
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchase_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purchase_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.agriculture.pojo.PurchaseRecord">
    insert into purchase_record (id, personnal_id, pool_id, 
      quantity, buyer_id, enterprise_id, 
      source)
    values (#{id,jdbcType=INTEGER}, #{personnalId,jdbcType=INTEGER}, #{poolId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{buyerId,jdbcType=INTEGER}, #{enterpriseId,jdbcType=INTEGER}, 
      #{source,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.njs.agriculture.pojo.PurchaseRecord">
    insert into purchase_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personnalId != null">
        personnal_id,
      </if>
      <if test="poolId != null">
        pool_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="buyerId != null">
        buyer_id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="source != null">
        source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personnalId != null">
        #{personnalId,jdbcType=INTEGER},
      </if>
      <if test="poolId != null">
        #{poolId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.agriculture.pojo.PurchaseRecord">
    update purchase_record
    <set>
      <if test="personnalId != null">
        personnal_id = #{personnalId,jdbcType=INTEGER},
      </if>
      <if test="poolId != null">
        pool_id = #{poolId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.agriculture.pojo.PurchaseRecord">
    update purchase_record
    set personnal_id = #{personnalId,jdbcType=INTEGER},
      pool_id = #{poolId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      buyer_id = #{buyerId,jdbcType=INTEGER},
      enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      source = #{source,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>