<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njs.agriculture.mapper.RootRecordDOMapper">
  <resultMap id="BaseResultMap" type="com.njs.agriculture.pojo.RootRecordDO">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="field_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="batch_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="plant_start" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="plant_end" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="machine_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pack_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, field_id, batch_num, plant_start, plant_end, machine_id, pack_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from root_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from root_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njs.agriculture.pojo.RootRecordDO">
    insert into root_record (id, field_id, batch_num, 
      plant_start, plant_end, machine_id, 
      pack_id)
    values (#{id,jdbcType=INTEGER}, #{fieldId,jdbcType=INTEGER}, #{batchNum,jdbcType=VARCHAR}, 
      #{plantStart,jdbcType=TIMESTAMP}, #{plantEnd,jdbcType=TIMESTAMP}, #{machineId,jdbcType=INTEGER}, 
      #{packId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njs.agriculture.pojo.RootRecordDO">
    insert into root_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fieldId != null">
        field_id,
      </if>
      <if test="batchNum != null">
        batch_num,
      </if>
      <if test="plantStart != null">
        plant_start,
      </if>
      <if test="plantEnd != null">
        plant_end,
      </if>
      <if test="machineId != null">
        machine_id,
      </if>
      <if test="packId != null">
        pack_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fieldId != null">
        #{fieldId,jdbcType=INTEGER},
      </if>
      <if test="batchNum != null">
        #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="plantStart != null">
        #{plantStart,jdbcType=TIMESTAMP},
      </if>
      <if test="plantEnd != null">
        #{plantEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="machineId != null">
        #{machineId,jdbcType=INTEGER},
      </if>
      <if test="packId != null">
        #{packId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njs.agriculture.pojo.RootRecordDO">
    update root_record
    <set>
      <if test="fieldId != null">
        field_id = #{fieldId,jdbcType=INTEGER},
      </if>
      <if test="batchNum != null">
        batch_num = #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="plantStart != null">
        plant_start = #{plantStart,jdbcType=TIMESTAMP},
      </if>
      <if test="plantEnd != null">
        plant_end = #{plantEnd,jdbcType=TIMESTAMP},a
      </if>
      <if test="machineId != null">
        machine_id = #{machineId,jdbcType=INTEGER},
      </if>
      <if test="packId != null">
        pack_id = #{packId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njs.agriculture.pojo.RootRecordDO">
    update root_record
    set field_id = #{fieldId,jdbcType=INTEGER},
      batch_num = #{batchNum,jdbcType=VARCHAR},
      plant_start = #{plantStart,jdbcType=TIMESTAMP},
      plant_end = #{plantEnd,jdbcType=TIMESTAMP},
      machine_id = #{machineId,jdbcType=INTEGER},
      pack_id = #{packId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectNewByFieldId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from root_record
    where field_id = #{id,jdbcType=INTEGER}
    order by plant_start desc
    limit 1
  </select>

  <select id="selectNewByBatchId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from root_record
    where batch_num = #{batchId,jdbcType=VARCHAR}
  </select>


  <select id="selectUnPackBatchIdListByFieldId" parameterType="java.lang.Integer" resultType="java.lang.String">
    select
    batch_num
    from root_record
    where pack_id is null and field_id = #{fieldId, jdbcType=INTEGER}
  </select>

  <select id="selectPackedBatchIdList" resultType="java.lang.String">
    select
    batch_num
    from root_record
    where pack_id is not null
  </select>


</mapper>